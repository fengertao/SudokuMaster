<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2018-2019,  Charlie Feng. All Rights Reserved.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.0.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>charlie.feng.game</groupId>
    <artifactId>sudokumasterserv</artifactId>
    <version>0.4.1-SNAPSHOT</version>
    <name>sudokumasterserv</name>
    <description>Sudoku Master Service</description>

    <properties>
        <java.version>1.8</java.version>
        <liquibase.version>3.6.3</liquibase.version>
        <!-- Do NOT upgrade to 3.8. Exception: Error setting up or running Liquibase: javax.persistence.PersistenceException: Unable to resolve persistence unit root URL -->
        <liquibase-hibernate5.version>3.6</liquibase-hibernate5.version>
        <spring-data-jpa.version>2.1.10.RELEASE</spring-data-jpa.version>
        <!-- Could be override by -P dev/mysql/prod -->
        <springProfilesActive>dev</springProfilesActive>
    </properties>

    <scm>
        <connection>scm:git:git@github.com:fengertao/SudokuMasterServ.git</connection>
        <tag>HEAD</tag>
    </scm>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-ldap</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-hateoas</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-data</artifactId>
        </dependency>
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>${liquibase.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.vaadin.external.google</groupId>
            <artifactId>android-json</artifactId>
            <version>0.0.20131108.vaadin1</version>
        </dependency>
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>0.9.11</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>0.9.1</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>*.properties</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>*.properties</exclude>
                </excludes>
                <filtering>false</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
                <configuration>
                    <goals>install</goals>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>${liquibase.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.liquibase.ext</groupId>
                        <artifactId>liquibase-hibernate5</artifactId>
                        <version>${liquibase-hibernate5.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-beans</artifactId>
                        <version>${spring-framework.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-core</artifactId>
                        <version>${spring-framework.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-context</artifactId>
                        <version>${spring-framework.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.springframework.data</groupId>
                        <artifactId>spring-data-jpa</artifactId>
                        <version>${spring-data-jpa.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-web</artifactId>
                        <version>${project.parent.version}</version>
                    </dependency>
                </dependencies>
                <!--                <configuration>-->
                <!--                    <propertyFile>src/main/resources/liquibase.properties</propertyFile>-->
                <!--                    <changeLogFile>target/classes/db/changelog/db.changelog-master.yaml</changeLogFile>-->
                <!--                </configuration>-->
                <!--                <executions>-->
                <!--                    &lt;!&ndash; mark db up-to-date in the  DATABASECHANGELOG table after generating-->
                <!--                    schema with hbm2ddl so that no migration is executed.-->
                <!--                    we are telling Liquibase not to try any database migrations.-->
                <!--                    This is our normal workflow of updating model with JPA annotations and running tests.-->
                <!--                    Hibernate plugin takes care of dropping and re-creating the database.-->
                <!--                    &ndash;&gt;-->
                <!--                    <execution>-->
                <!--                        <id>mark-db-up-to-date</id>-->
                <!--                        <phase>compile</phase>-->
                <!--                        <goals>-->
                <!--                            <goal>changelogSync</goal>-->
                <!--                        </goals>-->
                <!--                    </execution>-->
                <!--                </executions>-->
            </plugin>
        </plugins>
    </build>
    <profiles>
        <!-- build OS profiles -->
        <profile>
            <id>unix</id>
            <activation>
                <os>
                    <family>unix</family>
                </os>
            </activation>
            <properties>
                <!--suppress UnresolvedMavenProperty -->
                <hostname>${env.HOSTNAME}</hostname>
            </properties>
        </profile>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <properties>
                <!--suppress UnresolvedMavenProperty -->
                <hostname>${env.COMPUTERNAME}</hostname>
            </properties>
        </profile>

        <!-- Database profiles -->
        <profile>
            <id>dev</id>
            <activation>
                <!-- Because OS profile will be activated, so this activeByDefault will useless -->
                <!-- Then application.properties spring.profiles.active=dev will be effective -->
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <springProfilesActive>dev</springProfilesActive>
            </properties>
        </profile>
        <profile>
            <id>mysql</id>
            <properties>
                <springProfilesActive>mysql</springProfilesActive>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <springProfilesActive>prod</springProfilesActive>
            </properties>
        </profile>

    </profiles>
</project>
